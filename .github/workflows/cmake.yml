name: "Linux Build and Test"

on:
  push:
    branches: [ "master", "devel" ]
  pull_request:
    branches: [ "master", "devel" ]
  workflow_dispatch:
    branches: [ "master", "devel" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDebInfo
  SONIVOX_LOCATION: ${{github.workspace}}/SonivoxV3
  INSTALL_LOCATION: ${{github.workspace}}/DrumstickV2

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: dawidd6/action-download-artifact@v3
      with:
        name: SonivoxV3-linux
        github_token: ${{secrets.GH_PAT}}
        repo: pedrolcl/sonivox
        workflow: cmake.yml

    - name: Extract downloaded files
      run: tar xvf SonivoxV3.tar

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.5.*'
        modules: qt5compat

    - name: Dependencies
      run: sudo apt-get update && sudo apt-get install -yq pkg-config libasound2-dev libpulse-dev libfluidsynth-dev

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build
        -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        -DCMAKE_PREFIX_PATH=${{env.SONIVOX_LOCATION}}
        -DCMAKE_INSTALL_PREFIX=${{env.INSTALL_LOCATION}}
        -DUSE_SONIVOX=ON
        -DUSE_PULSEAUDIO=ON
        -DBUILD_DOCS=OFF
        -DBUILD_UTILS=OFF

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure -R "^(alsa|file|widgets)"

    - name: Install
      run: cmake --install ${{github.workspace}}/build

    - name: Create Archive
      run: |
        cd ${{github.workspace}}
        tar cvf DrumstickV2.tar DrumstickV2

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: DrumstickV2
        path: DrumstickV2.tar
        retention-days: 90
        overwrite: true
